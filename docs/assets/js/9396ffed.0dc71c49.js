"use strict";(self.webpackChunk_joplin_doc_builder=self.webpackChunk_joplin_doc_builder||[]).push([[6624],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return h}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(r),m=n,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||s;return r?a.createElement(h,o(o({ref:t},p),{},{components:r})):a.createElement(h,o({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:n,o[1]=i;for(var u=2;u<s;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3493:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return u}});var a=r(7462),n=(r(7294),r(3905));const s={sidebar_label:"Joplin Server user status",title:"Joplin Server user status",description:"User flags User flags are used to indicate problem conditions with a particular account. They are usually automatically set by various services, for example when an account go over the limit, or wh..."},o="Joplin Server user status",i={unversionedId:"dev/spec/server_user_status",id:"dev/spec/server_user_status",title:"Joplin Server user status",description:"User flags User flags are used to indicate problem conditions with a particular account. They are usually automatically set by various services, for example when an account go over the limit, or wh...",source:"@site/help/dev/spec/server_user_status.md",sourceDirName:"dev/spec",slug:"/dev/spec/server_user_status",permalink:"/help/dev/spec/server_user_status",draft:!1,editUrl:"https://github.com/laurent22/joplin/tree/dev/readme/dev/spec/server_user_status.md",tags:[],version:"current",frontMatter:{sidebar_label:"Joplin Server user status",title:"Joplin Server user status",description:"User flags User flags are used to indicate problem conditions with a particular account. They are usually automatically set by various services, for example when an account go over the limit, or wh..."},sidebar:"helpSidebar",previous:{title:"Sharing a notebook with E2EE enabled",permalink:"/help/dev/spec/server_sharing_e2ee"},next:{title:"Joplin synchronisation",permalink:"/help/dev/spec/sync"}},l={},u=[{value:"User flags",id:"user-flags",level:2},{value:"User status",id:"user-status",level:2}],p={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"joplin-server-user-status"},"Joplin Server user status"),(0,n.kt)("div",{className:"donate-links"},(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.paypal.com/donate/?business=E8JMYD2LQ8MMA&no_recurring=0&item_name=I+rely+on+donations+to+maintain+and+improve+the+Joplin+open+source+project.+Thank+you+for+your+help+-+it+makes+a+difference%21&currency_code=EUR"},(0,n.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-PayPal-green.svg",alt:"Donate using PayPal"}))," ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/sponsors/laurent22/"},(0,n.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/GitHub-Badge.svg",alt:"Sponsor on GitHub"}))," ",(0,n.kt)("a",{parentName:"p",href:"https://www.patreon.com/joplin"},(0,n.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Patreon-Badge.svg",alt:"Become a patron"}))," ",(0,n.kt)("a",{parentName:"p",href:"https://joplinapp.org/donate/#donations"},(0,n.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-IBAN.svg",alt:"Donate using IBAN"})))),(0,n.kt)("h2",{id:"user-flags"},"User flags"),(0,n.kt)("p",null,"User flags are used to indicate problem conditions with a particular account. They are usually automatically set by various services, for example when an account go over the limit, or when a payment fails. Likewise they are removed automatically when the condition changes."),(0,n.kt)("p",null,"The list of flags is defined in ",(0,n.kt)("inlineCode",{parentName:"p"},"UserFlagType"),"."),(0,n.kt)("h2",{id:"user-status"},"User status"),(0,n.kt)("p",null,"A user can have various status that affects the possible actions they can do. ",(0,n.kt)("strong",{parentName:"p"},"User statuses are derived from user flags"),"."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Status"),(0,n.kt)("th",{parentName:"tr",align:null},"Values"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"can_upload"),(0,n.kt)("td",{parentName:"tr",align:null},"0 or 1"),(0,n.kt)("td",{parentName:"tr",align:null},"Whether the user can upload items, such as notes or tags, to the server.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"enabled"),(0,n.kt)("td",{parentName:"tr",align:null},"0 or 1"),(0,n.kt)("td",{parentName:"tr",align:null},"A disabled user cannot upload or download data from the server API anymore. However, they can still login to the website, make change to their profile, etc.")))),(0,n.kt)("p",null,'Perhaps a third status: "blocked" could be created. It would be like ',(0,n.kt)("inlineCode",{parentName:"p"},"enabled = 0"),", except they won't be able to login to the website either."),(0,n.kt)("p",null,"These status should only be set as a results of user flags. In other words, the application should not directly set ",(0,n.kt)("inlineCode",{parentName:"p"},"enabled")," to 0 or 1 but instead set a user flag that would indicate the issue. A script will then process the user flags and set the status as a result."))}d.isMDXComponent=!0}}]);