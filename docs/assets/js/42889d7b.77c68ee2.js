"use strict";(self.webpackChunk_joplin_doc_builder=self.webpackChunk_joplin_doc_builder||[]).push([[8531],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),f=l,g=d["".concat(s,".").concat(f)]||d[f]||c[f]||i;return n?a.createElement(g,r(r({ref:t},p),{},{components:n})):a.createElement(g,r({ref:t},p))}));function g(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:l,r[1]=o;for(var u=2;u<i;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},57095:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return r},default:function(){return c},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return u}});var a=n(87462),l=(n(67294),n(3905));const i={sidebar_label:"How to add a new default plugin",title:"How to add a new default plugin",description:"To add a new default plugin for desktop: Add the plugin ID and pinned version to defaultPlugins object located in desktopDefaultPluginsInfo.ts If necessary, you can also add default settings for th..."},r="How to add a new default plugin",o={unversionedId:"dev/spec/default_plugins",id:"dev/spec/default_plugins",title:"How to add a new default plugin",description:"To add a new default plugin for desktop: Add the plugin ID and pinned version to defaultPlugins object located in desktopDefaultPluginsInfo.ts If necessary, you can also add default settings for th...",source:"@site/help/dev/spec/default_plugins.md",sourceDirName:"dev/spec",slug:"/dev/spec/default_plugins",permalink:"/help/dev/spec/default_plugins",draft:!1,editUrl:"https://github.com/laurent22/joplin/tree/dev/readme/dev/spec/default_plugins.md",tags:[],version:"current",frontMatter:{sidebar_label:"How to add a new default plugin",title:"How to add a new default plugin",description:"To add a new default plugin for desktop: Add the plugin ID and pinned version to defaultPlugins object located in desktopDefaultPluginsInfo.ts If necessary, you can also add default settings for th..."},sidebar:"helpSidebar",previous:{title:"Clipper authorisation mechanism",permalink:"/help/dev/spec/clipper_auth"},next:{title:"Desktop application styling",permalink:"/help/dev/spec/desktop_styling"}},s={},u=[{value:"Patching the plugin",id:"patching-the-plugin",level:2},{value:"Bundling of default plugins",id:"bundling-of-default-plugins",level:2},{value:"Installing of default plugins",id:"installing-of-default-plugins",level:2}],p={toc:u},d="wrapper";function c(e){let{components:t,...n}=e;return(0,l.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"how-to-add-a-new-default-plugin"},"How to add a new default plugin"),(0,l.kt)("div",{className:"donate-links"},(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.paypal.com/donate/?business=E8JMYD2LQ8MMA&no_recurring=0&item_name=I+rely+on+donations+to+maintain+and+improve+the+Joplin+open+source+project.+Thank+you+for+your+help+-+it+makes+a+difference%21&currency_code=EUR"},(0,l.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-PayPal-green.svg",alt:"Donate using PayPal"}))," ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/sponsors/laurent22/"},(0,l.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/GitHub-Badge.svg",alt:"Sponsor on GitHub"}))," ",(0,l.kt)("a",{parentName:"p",href:"https://www.patreon.com/joplin"},(0,l.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Patreon-Badge.svg",alt:"Become a patron"}))," ",(0,l.kt)("a",{parentName:"p",href:"https://joplinapp.org/donate/#donations"},(0,l.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-IBAN.svg",alt:"Donate using IBAN"})))),(0,l.kt)("p",null,"To add a new default plugin for desktop:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Add the plugin ID and pinned version to ",(0,l.kt)("inlineCode",{parentName:"li"},"defaultPlugins")," object located in ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/laurent22/joplin/blob/eb7083d7888433ff6ef76ccfb7fb87ba951d513f/packages/lib/services/plugins/defaultPlugins/desktopDefaultPluginsInfo.ts#L5"},"desktopDefaultPluginsInfo.ts")),(0,l.kt)("li",{parentName:"ul"},"If necessary, you can also add default settings for the plugins."),(0,l.kt)("li",{parentName:"ul"},"For example, if you wanted to add 2 default settings, ",(0,l.kt)("inlineCode",{parentName:"li"},"settingName1")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"settingName2"),", then you will modify the ",(0,l.kt)("inlineCode",{parentName:"li"},"defaultPlugins")," object in following way:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"const defaultPlugins = {\n    'samplePluginId': {\n        settings: {\n            'settingName1': 'setting-value1',\n            'settingName2': 'setting-value2',\n        },\n    },\n};\n")),(0,l.kt)("p",null,"After this, add the commit, branch, and clone URL to be build from to ",(0,l.kt)("inlineCode",{parentName:"p"},"pluginRepositories.json"),"."),(0,l.kt)("p",null,"For example,"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "plugin.id.here": {\n        "cloneUrl": "https://example.com/plugin-repo/plugin-repo-here.git",\n        "branch": "main",\n        "commit": "840d2e84b70adf6de961e167dcd27ddad088b286"\n    }\n}\n')),(0,l.kt)("h2",{id:"patching-the-plugin"},"Patching the plugin"),(0,l.kt)("p",null,"Some plugins need patching. To create or update a plugin's patch, run the ",(0,l.kt)("inlineCode",{parentName:"p"},"patch-plugin")," command in the ",(0,l.kt)("inlineCode",{parentName:"p"},"packages/default-plugins/")," directory."),(0,l.kt)("p",null,"For example,"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ cd packages/default-plugins\n$ yarn patch-plugin plugin.id.here\n")),(0,l.kt)("p",null,"The script will create a temporary directory in which changes can be made. Do not stage the changes that should appear in the patch."),(0,l.kt)("h2",{id:"bundling-of-default-plugins"},"Bundling of default plugins"),(0,l.kt)("p",null,"Scripts for bundling default plugins are present in ",(0,l.kt)("inlineCode",{parentName:"p"},"packages/default-plugins/"),"."),(0,l.kt)("p",null,"These are run by the ",(0,l.kt)("inlineCode",{parentName:"p"},"app-desktop")," package on a full ",(0,l.kt)("inlineCode",{parentName:"p"},"build")," (e.g. on ",(0,l.kt)("inlineCode",{parentName:"p"},"postinstall"),")."),(0,l.kt)("h2",{id:"installing-of-default-plugins"},"Installing of default plugins"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All the functions related to default plugins are located in ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/laurent22/joplin/blob/eb7083d7888433ff6ef76ccfb7fb87ba951d513f/packages/lib/services/plugins/defaultPlugins/defaultPluginsUtils.ts"},"defaultPluginsUtils.ts")),(0,l.kt)("li",{parentName:"ul"},"Default plugins are bundled with the app (included in the ",(0,l.kt)("inlineCode",{parentName:"li"},"build/")," directory) and loaded from this directory."),(0,l.kt)("li",{parentName:"ul"},"To allow loading ",(0,l.kt)("inlineCode",{parentName:"li"},"dev")," and NPM versions of the plugin, default plugins are loaded after non-default plugins. The plugin service refuses to load additional copies of already-loaded plugins. As such, non-default plugins take precedence over default plugins."),(0,l.kt)("li",{parentName:"ul"},"After loading is complete, we apply the default settings for each default plugin. Default settings are located in ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/laurent22/joplin/blob/eb7083d7888433ff6ef76ccfb7fb87ba951d513f/packages/lib/services/plugins/defaultPlugins/desktopDefaultPluginsInfo.ts"},"desktopDefaultPluginsInfo.ts"),". The ",(0,l.kt)("inlineCode",{parentName:"li"},"installedDefaultPlugins")," setting is used to ensure that settings are only overridden once."),(0,l.kt)("li",{parentName:"ul"},"If the plugin is already installed by the user, then we don't apply default settings to avoid overriding user's settings.")))}c.isMDXComponent=!0}}]);