"use strict";(self.webpackChunk_joplin_doc_builder=self.webpackChunk_joplin_doc_builder||[]).push([[567],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return y}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),l=p(n),h=a,y=l["".concat(c,".").concat(h)]||l[h]||u[h]||s;return n?o.createElement(y,r(r({ref:t},d),{},{components:n})):o.createElement(y,r({ref:t},d))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,r=new Array(s);r[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[l]="string"==typeof e?e:a,r[1]=i;for(var p=2;p<s;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7945:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return r},default:function(){return u},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return p}});var o=n(7462),a=(n(7294),n(3905));const s={url:"https://www.patreon.com/posts/joplin-informal-35719724",published_at:new Date("2020-04-06T21:42:54.000Z"),sidebar_label:"Joplin informal encryption and security audit results",date:new Date("2020-04-06T00:00:00.000Z"),title:"Joplin informal encryption and security audit results",description:"Joplin encryption, and in particular the E2EE system used during synchronisation, was recently audited by Isaac Potoczny-Jones, CEO of Tozny and this is what he had to say: I was looking through yo..."},r="Joplin informal encryption and security audit results",i={permalink:"/fr/news/20200406-224254",editUrl:"https://github.com/laurent22/joplin/tree/dev/readme/news/20200406-224254.md",source:"@site/news/20200406-224254.md",title:"Joplin informal encryption and security audit results",description:"Joplin encryption, and in particular the E2EE system used during synchronisation, was recently audited by Isaac Potoczny-Jones, CEO of Tozny and this is what he had to say: I was looking through yo...",date:"2020-04-06T00:00:00.000Z",formattedDate:"6 avril 2020",tags:[],readingTime:7.375,hasTruncateMarker:!1,authors:[],frontMatter:{url:"https://www.patreon.com/posts/joplin-informal-35719724",published_at:"2020-04-06T21:42:54.000Z",sidebar_label:"Joplin informal encryption and security audit results",date:"2020-04-06T00:00:00.000Z",title:"Joplin informal encryption and security audit results",description:"Joplin encryption, and in particular the E2EE system used during synchronisation, was recently audited by Isaac Potoczny-Jones, CEO of Tozny and this is what he had to say: I was looking through yo..."},prevItem:{title:"GSoC 2020 students have been announced by Google",permalink:"/fr/news/20200505-181736"},nextItem:{title:"Experimental WYSIWYG editor in Joplin",permalink:"/fr/news/20200314-001555"}},c={authorsImageUrls:[]},p=[{value:"OBC2",id:"obc2",level:3},{value:"Unnecessary key expansions",id:"unnecessary-key-expansions",level:3},{value:"Unnecessary and potentially insecure master key checksum",id:"unnecessary-and-potentially-insecure-master-key-checksum",level:3},{value:"Encrypting local secrets with a keychain service",id:"encrypting-local-secrets-with-a-keychain-service",level:3}],d={toc:p},l="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{className:"donate-links"},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.paypal.com/donate/?business=E8JMYD2LQ8MMA&no_recurring=0&item_name=I+rely+on+donations+to+maintain+and+improve+the+Joplin+open+source+project.+Thank+you+for+your+help+-+it+makes+a+difference%21&currency_code=EUR"},(0,a.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-PayPal-green.svg",alt:"Donate using PayPal"}))," ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/sponsors/laurent22/"},(0,a.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/GitHub-Badge.svg",alt:"Sponsor on GitHub"}))," ",(0,a.kt)("a",{parentName:"p",href:"https://www.patreon.com/joplin"},(0,a.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Patreon-Badge.svg",alt:"Become a patron"}))," ",(0,a.kt)("a",{parentName:"p",href:"https://joplinapp.org/donate/#donations"},(0,a.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-IBAN.svg",alt:"Donate using IBAN"})))),(0,a.kt)("p",null,"Joplin encryption, and in particular the E2EE system used during synchronisation, was recently audited by Isaac Potoczny-Jones, CEO of ",(0,a.kt)("a",{parentName:"p",href:"https://tozny.com"},"Tozny")," and this is what he had to say:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"I was looking through your encryption implementation for Joplin and I have a few comments and concerns. I don't see anything that I ",(0,a.kt)("em",{parentName:"p"},"know")," is a critical issue, but there are a number of choices and weaknesses that I'd like to lend you some advice about.")),(0,a.kt)("h3",{id:"obc2"},"OBC2"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"I was looking through your encryption implementation for Joplin and I have a few comments and concerns. I don't see anything that I ",(0,a.kt)("em",{parentName:"p"},"know")," is a critical issue, but there are a number of choices and weaknesses that I'd like to lend you some advice about."),(0,a.kt)("p",{parentName:"blockquote"},"OCB2, the chosen multi-block cipher mode has had some weaknesses identified in the last few years. I don't know this mode well since it's not a NIST-approved mode, but here's a paper on the topic. I get the impression it's not considered a good choice anymore. ",(0,a.kt)("a",{parentName:"p",href:"https://pdfs.semanticscholar.org/bb95/0d82fd390e732f71d8320530994bfb6d2529.pdf"},"Source"))),(0,a.kt)("p",null,"We indeed had been notified about this issue by another cryptographer and had been preparing migration to the more secure CCM mode. Migration for this is now complete in all the Joplin clients and a migration tool has been added to the Encryption config screen of the desktop application. In particular you can perform two operations:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Upgrade the master key: This will convert the master key encryption to CCM"),(0,a.kt)("li",{parentName:"ul"},"Re-encryption: With this tool, you can re-encrypt all your data using the new encryption method based on CCM. Please follow the instructions on this screen and note that this process can take quite a bit of time so it's better to plan for it and run it over night. It is not entirely clear how the OBC2 flaw can be exploited but it is best to upgrade your data as soon as possible.")),(0,a.kt)("h3",{id:"unnecessary-key-expansions"},"Unnecessary key expansions"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"I was looking through your encryption implementation for Joplin and I have a few comments and concerns. I don't see anything that I ",(0,a.kt)("em",{parentName:"p"},"know")," is a critical issue, but there are a number of choices and weaknesses that I'd like to lend you some advice about."),(0,a.kt)("p",{parentName:"blockquote"},"OCB2, the chosen multi-block cipher mode has had some weaknesses identified in the last few years. I don't know this mode well since it's not a NIST-approved mode, but here's a paper on the topic. I get the impression it's not considered a good choice anymore. ",(0,a.kt)("a",{parentName:"p",href:"https://pdfs.semanticscholar.org/bb95/0d82fd390e732f71d8320530994bfb6d2529.pdf"},"Source")),(0,a.kt)("p",{parentName:"blockquote"},"Running key expansion on a random key: Your encrypt function uses either 1k or 10k rounds\xa0of key derivation. The goal of this is to reduce brute-force attacks against user-chosen passwords. This function appears to me to be used for both password-based key derivation (at 10k rounds) ",(0,a.kt)("em",{parentName:"p"},"and"),' bulk encryption of data from a randomly-generated "master key" (at 1k rounds). The bulk encryption does not need the password expansion since the key is randomly generated (presumably with a cryptographically strong generator). I suspect this could be a major performance issue on the bulk encryption of raw data, so if you\'re finding encryption slow, this is maybe why.')),(0,a.kt)("p",null,"This is more a performance than a security issue. Indeed, the previous encryption method was using 1,000 key expansion iterations every time a note was encrypted, which is unnecessary since the master key is already secured with 10,000 iterations. As a result the encryption algorithm has been changed to perform only 100 iterations when encrypting notes, which should result in faster encryption and decryption on the desktop, mobile and CLI applications."),(0,a.kt)("h3",{id:"unnecessary-and-potentially-insecure-master-key-checksum"},"Unnecessary and potentially insecure master key checksum"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"I was looking through your encryption implementation for Joplin and I have a few comments and concerns. I don't see anything that I ",(0,a.kt)("em",{parentName:"p"},"know")," is a critical issue, but there are a number of choices and weaknesses that I'd like to lend you some advice about."),(0,a.kt)("p",{parentName:"blockquote"},"OCB2, the chosen multi-block cipher mode has had some weaknesses identified in the last few years. I don't know this mode well since it's not a NIST-approved mode, but here's a paper on the topic. I get the impression it's not considered a good choice anymore. ",(0,a.kt)("a",{parentName:"p",href:"https://pdfs.semanticscholar.org/bb95/0d82fd390e732f71d8320530994bfb6d2529.pdf"},"Source")),(0,a.kt)("p",{parentName:"blockquote"},"Running key expansion on a random key: Your encrypt function uses either 1k or 10k rounds\xa0of key derivation. The goal of this is to reduce brute-force attacks against user-chosen passwords. This function appears to me to be used for both password-based key derivation (at 10k rounds) ",(0,a.kt)("em",{parentName:"p"},"and"),' bulk encryption of data from a randomly-generated "master key" (at 1k rounds). The bulk encryption does not need the password expansion since the key is randomly generated (presumably with a cryptographically strong generator). I suspect this could be a major performance issue on the bulk encryption of raw data, so if you\'re finding encryption slow, this is maybe why.'),(0,a.kt)("p",{parentName:"blockquote"},"You make and store a checksum of the master password with SHA256 in addition to encrypting it. I expect this is because you need a way to tell if the user's password is correct. I've never seen this done before, and it has me concerned, but I don't know for sure that it's an issue. Thought I'd mention it anyway. ",(0,a.kt)("a",{parentName:"p",href:"https://crypto.stackexchange.com/questions/61915/can-i-hash-a-secret-key-and-used-the-hash-as-key-id"},"Source"),". At least with CCM mode (and I think with OCB2) it shouldn't successfully decrypt if you have the wrong password.")),(0,a.kt)("p",null,'A checksum was previously stored with the master key to verify that it is valid. This could potentially weaken the security of the mater key since, as mentioned in Cryptography StackExchange link, "in the standard model of hash functions there isn\'t a requirement that hash outputs not have properties that leak information about the input". It was also unnecessary since the decryption algorithm in use would fail if the key is invalid, so the additional checksum was not needed.'),(0,a.kt)("p",null,"This has also been addressed by the new master key upgrading tool. If you have performed the upgrade, the checksum will be gone from your master key."),(0,a.kt)("h3",{id:"encrypting-local-secrets-with-a-keychain-service"},"Encrypting local secrets with a keychain service"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"I was looking through your encryption implementation for Joplin and I have a few comments and concerns. I don't see anything that I ",(0,a.kt)("em",{parentName:"p"},"know")," is a critical issue, but there are a number of choices and weaknesses that I'd like to lend you some advice about."),(0,a.kt)("p",{parentName:"blockquote"},"OCB2, the chosen multi-block cipher mode has had some weaknesses identified in the last few years. I don't know this mode well since it's not a NIST-approved mode, but here's a paper on the topic. I get the impression it's not considered a good choice anymore. ",(0,a.kt)("a",{parentName:"p",href:"https://pdfs.semanticscholar.org/bb95/0d82fd390e732f71d8320530994bfb6d2529.pdf"},"Source")),(0,a.kt)("p",{parentName:"blockquote"},"Running key expansion on a random key: Your encrypt function uses either 1k or 10k rounds\xa0of key derivation. The goal of this is to reduce brute-force attacks against user-chosen passwords. This function appears to me to be used for both password-based key derivation (at 10k rounds) ",(0,a.kt)("em",{parentName:"p"},"and"),' bulk encryption of data from a randomly-generated "master key" (at 1k rounds). The bulk encryption does not need the password expansion since the key is randomly generated (presumably with a cryptographically strong generator). I suspect this could be a major performance issue on the bulk encryption of raw data, so if you\'re finding encryption slow, this is maybe why.'),(0,a.kt)("p",{parentName:"blockquote"},"You make and store a checksum of the master password with SHA256 in addition to encrypting it. I expect this is because you need a way to tell if the user's password is correct. I've never seen this done before, and it has me concerned, but I don't know for sure that it's an issue. Thought I'd mention it anyway. ",(0,a.kt)("a",{parentName:"p",href:"https://crypto.stackexchange.com/questions/61915/can-i-hash-a-secret-key-and-used-the-hash-as-key-id"},"Source"),". At least with CCM mode (and I think with OCB2) it shouldn't successfully decrypt if you have the wrong password."),(0,a.kt)("p",{parentName:"blockquote"},"Now I did notice that you cache the plain text password in the database, which is a bit concerning, but I guess the security model of your encryption approach is that it happens during sync, not locally. The generally accepted approach ","[to store secrets]"," is to use a keychain service, which is available pretty much on all modern platforms.")),(0,a.kt)("p",null,"Passwords are indeed cached locally, so that you don't have to input it again every time a note needs to be encrypted or decrypted for synchronisation. It is assumed that your local device is secure, which is why for now passwords were cached locally."),(0,a.kt)("p",null,"To improve security however, future versions of Joplin will use the system keychain whenever it is available. A ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/laurent22/joplin/pull/2861"},"pull request")," is in progress to add this feature."),(0,a.kt)("p",null,"To conclude I'd like to thank Isaac Potoczny-Jones for conducting this audit and revealing these potential security issues. Joplin is now much safer as a result."))}u.isMDXComponent=!0}}]);