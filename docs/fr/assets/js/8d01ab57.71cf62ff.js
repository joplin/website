"use strict";(self.webpackChunk_joplin_doc_builder=self.webpackChunk_joplin_doc_builder||[]).push([[7015],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),u=a,h=c["".concat(l,".").concat(u)]||c[u]||m[u]||r;return n?i.createElement(h,o(o({ref:t},d),{},{components:n})):i.createElement(h,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},22008:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return r},metadata:function(){return s},toc:function(){return p}});var i=n(87462),a=(n(67294),n(3905));const r={sidebar_label:"Web app",title:"Web app",description:":::note This document explains how the Joplin Web App works from a technical perspective. ::: The Joplin Web App is a version of the mobile application that targets web using react-native-web. See ..."},o="Web app",s={unversionedId:"dev/spec/web_app",id:"dev/spec/web_app",title:"Web app",description:":::note This document explains how the Joplin Web App works from a technical perspective. ::: The Joplin Web App is a version of the mobile application that targets web using react-native-web. See ...",source:"@site/help/dev/spec/web_app.md",sourceDirName:"dev/spec",slug:"/dev/spec/web_app",permalink:"/fr/help/dev/spec/web_app",draft:!1,editUrl:"https://github.com/laurent22/joplin/tree/dev/readme/dev/spec/web_app.md",tags:[],version:"current",frontMatter:{sidebar_label:"Web app",title:"Web app",description:":::note This document explains how the Joplin Web App works from a technical perspective. ::: The Joplin Web App is a version of the mobile application that targets web using react-native-web. See ..."},sidebar:"helpSidebar",previous:{title:"Voice typing",permalink:"/fr/help/dev/spec/voice_typing"},next:{title:"Google Summer of Code 2020",permalink:"/fr/help/dev/gsoc/gsoc2020/"}},l={},p=[{value:"File system",id:"file-system",level:2},{value:"Virtual files",id:"virtual-files",level:3},{value:"Local file access",id:"local-file-access",level:3},{value:"Database and cross-origin isolation",id:"database-and-cross-origin-isolation",level:2},{value:"Single-instance lock",id:"single-instance-lock",level:2},{value:"Offline support",id:"offline-support",level:2},{value:"WebViews",id:"webviews",level:2},{value:"IPC",id:"ipc",level:3},{value:"<code>.postMessage</code>",id:"postmessage",level:4},{value:"<code>window.onmessage</code>",id:"windowonmessage",level:4},{value:"Note viewer",id:"note-viewer",level:2},{value:"Incompatible libraries",id:"incompatible-libraries",level:2}],d={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"web-app"},"Web app"),(0,a.kt)("div",{className:"donate-links"},(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.paypal.com/donate/?business=E8JMYD2LQ8MMA&no_recurring=0&item_name=I+rely+on+donations+to+maintain+and+improve+the+Joplin+open+source+project.+Thank+you+for+your+help+-+it+makes+a+difference%21&currency_code=EUR"},(0,a.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-PayPal-green.svg",alt:"Donate using PayPal"}))," ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/sponsors/laurent22/"},(0,a.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/GitHub-Badge.svg",alt:"Sponsor on GitHub"}))," ",(0,a.kt)("a",{parentName:"p",href:"https://www.patreon.com/joplin"},(0,a.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Patreon-Badge.svg",alt:"Become a patron"}))," ",(0,a.kt)("a",{parentName:"p",href:"https://joplinapp.org/donate/#donations"},(0,a.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-IBAN.svg",alt:"Donate using IBAN"})))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"This document explains how the Joplin Web App works from a technical perspective.")),(0,a.kt)("p",null,"The Joplin Web App is a version of the mobile application that targets web using ",(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/react-native-web"},(0,a.kt)("inlineCode",{parentName:"a"},"react-native-web")),". See ",(0,a.kt)("a",{parentName:"p",href:"/fr/help/dev/BUILD#web"},"BUILD.md")," for information about building thee web app."),(0,a.kt)("h2",{id:"file-system"},"File system"),(0,a.kt)("p",null,"On web, ",(0,a.kt)("inlineCode",{parentName:"p"},"shim.fsDriver")," wraps ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/File_System_API/Origin_private_file_system"},"the Origin Private File System (OPFS)"),". As of July 2024, some major browsers (Safari) only provide the synchronous versions of certain operations (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"createSyncAccessHandle"),"). These synchronous operations can only be accessed in a web ",(0,a.kt)("inlineCode",{parentName:"p"},"Worker"),"."),(0,a.kt)("mermaid",{value:'flowchart LR\n\tapp["App logic"]\n\tfsDriver["fsDriver.web"]\n\tWorker["Worker"]\n\tOPFS["OPFS and virtual files"]\n\n\tapp <--\x3e fsDriver\n\tfsDriver <--\x3e Worker\n\tWorker <--\x3e OPFS'}),(0,a.kt)("p",null,"In addition to files stored persistently through the OPFS API, the web ",(0,a.kt)("inlineCode",{parentName:"p"},"fsDriver")," also supports non-persistent virtual files and access to local user-specified directories."),(0,a.kt)("h3",{id:"virtual-files"},"Virtual files"),(0,a.kt)("p",null,"In some cases, it doesn't make sense to write temporary files to persistent storage. To support this, ",(0,a.kt)("inlineCode",{parentName:"p"},"fsDriver.web")," supports creating read-only virtual files with ",(0,a.kt)("inlineCode",{parentName:"p"},"createReadOnlyVirtualFile"),". These files are stored in local memory and can be accessed using most ",(0,a.kt)("inlineCode",{parentName:"p"},"fsDriver")," methods."),(0,a.kt)("h3",{id:"local-file-access"},"Local file access"),(0,a.kt)("p",null,"In some browsers, it's possible to mount local directories using ",(0,a.kt)("inlineCode",{parentName:"p"},"fsDriver.mountExternalDirectory"),". This method takes a handle returned by ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/showDirectoryPicker"},(0,a.kt)("inlineCode",{parentName:"a"},"showDirectoryPicker")),", which, as of 2024, has ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/showDirectoryPicker#browser_compatibility"},"limited browser support"),"."),(0,a.kt)("p",null,"To persist access to external directories, file system handles are stored in ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/indexedDB"},"an ",(0,a.kt)("inlineCode",{parentName:"a"},"indexedDB")," database"),", which supports storing and loading file system handles."),(0,a.kt)("p",null,"External files are mounted as subdirectories of the virtual ",(0,a.kt)("inlineCode",{parentName:"p"},"/external/")," directory."),(0,a.kt)("h2",{id:"database-and-cross-origin-isolation"},"Database and cross-origin isolation"),(0,a.kt)("p",null,"The web app uses ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/sqlite/sqlite-wasm"},(0,a.kt)("inlineCode",{parentName:"a"},"@sqlite.org/sqlite-wasm"))," for database access."),(0,a.kt)("p",null,"To function properly (likely due to use of ",(0,a.kt)("inlineCode",{parentName:"p"},"SharedArrayBuffer"),"), ",(0,a.kt)("inlineCode",{parentName:"p"},"@sqlite.org/sqlite-wasm")," requires ",(0,a.kt)("a",{parentName:"p",href:"https://web.dev/articles/coop-coep"},"cross origin isolation to be enabled"),". This is done adding certain HTTP headers to responses from the server."),(0,a.kt)("p",null,"As of July 2024, the official deployment of the Web App is hosted on GitHub pages, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/orgs/community/discussions/13309"},"which doesn't support serving with these headers"),". The Web App works around this by providing these headers in a ",(0,a.kt)("inlineCode",{parentName:"p"},"ServiceWorker"),"."),(0,a.kt)("p",null,"The Web App's ",(0,a.kt)("inlineCode",{parentName:"p"},"ServiceWorker")," is a heavily-modified fork of ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/gzuidhof/coi-serviceworker"},"the coi-serviceworker project"),", which enables cross-origin isolation."),(0,a.kt)("h2",{id:"single-instance-lock"},"Single-instance lock"),(0,a.kt)("p",null,"To prevent data corruption due to out-of-sync state between tabs, the Web App currently only allows one copy of the app to be open at a time."),(0,a.kt)("p",null,"This single-instance lock is enforced using a ",(0,a.kt)("inlineCode",{parentName:"p"},"ServiceWorker"),". If a user attempts to load the Web App in a new tab, the ",(0,a.kt)("inlineCode",{parentName:"p"},"ServiceWorker"),","),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"determines whether the request is for the Web App (see ",(0,a.kt)("inlineCode",{parentName:"li"},"handleRedirects")," in ",(0,a.kt)("inlineCode",{parentName:"li"},"serviceWorker.ts"),"),"),(0,a.kt)("li",{parentName:"ol"},"if so, intercepts the request,"),(0,a.kt)("li",{parentName:"ol"},"checks for an already-running copy of the app, and"),(0,a.kt)("li",{parentName:"ol"},"if a copy of the app is already running, returns an error page.")),(0,a.kt)("p",null,"If the ",(0,a.kt)("inlineCode",{parentName:"p"},"ServiceWorker")," fails to register (and cross-origin isolation is enabled by the server), it may be possible to bypass the ",(0,a.kt)("inlineCode",{parentName:"p"},"ServiceWorker"),"'s single-instance lock. As such, a secondary single-instance lock is also present. This lock attempts to communicate with other open Web Apps using a ",(0,a.kt)("inlineCode",{parentName:"p"},"BroadcastChannel"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"This might succeed even if the original ",(0,a.kt)("inlineCode",{parentName:"li"},"ServiceWorker")," failed to register."),(0,a.kt)("li",{parentName:"ul"},"This check might incorrectly report that only one app is open if other apps are in a different tab and haven't been used recently.")),(0,a.kt)("h2",{id:"offline-support"},"Offline support"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ServiceWorker")," intercepts and caches responses to requests for certain file types ",(0,a.kt)("strong",{parentName:"p"},"from the same domain as the web client"),". In the future, when equivalent requests fail, the ",(0,a.kt)("inlineCode",{parentName:"p"},"ServiceWorker")," responds with a cached response."),(0,a.kt)("h2",{id:"webviews"},"WebViews"),(0,a.kt)("p",null,"On all platforms, WebViews that load a local file should use ",(0,a.kt)("inlineCode",{parentName:"p"},"ExtendedWebView"),". This component uses a different WebView implementation on different platforms:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Android and iOS use ",(0,a.kt)("inlineCode",{parentName:"li"},"react-native-webview"),","),(0,a.kt)("li",{parentName:"ul"},"Jest uses ",(0,a.kt)("inlineCode",{parentName:"li"},"JSDOM"),"-based mock, and"),(0,a.kt)("li",{parentName:"ul"},"Web uses a sandboxed ",(0,a.kt)("inlineCode",{parentName:"li"},"iframe"),".",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"As of July 2024, ",(0,a.kt)("inlineCode",{parentName:"li"},"react-native-webview")," does not support web.")))),(0,a.kt)("p",null,"This section summarizes how ",(0,a.kt)("inlineCode",{parentName:"p"},"iframe"),"-based WebViews work on web."),(0,a.kt)("h3",{id:"ipc"},"IPC"),(0,a.kt)("p",null,"High-level communication can be done with ",(0,a.kt)("inlineCode",{parentName:"p"},"ExtendedWebView")," using an ",(0,a.kt)("inlineCode",{parentName:"p"},"RNToWebViewMessenger")," paired with a ",(0,a.kt)("inlineCode",{parentName:"p"},"WebViewToRNMessenger"),". These ",(0,a.kt)("inlineCode",{parentName:"p"},"RemoteMessenger"),"s expose methods on JavaScript objects to content inside or outside a ",(0,a.kt)("inlineCode",{parentName:"p"},"WebView"),"."),(0,a.kt)("p",null,"Although ",(0,a.kt)("inlineCode",{parentName:"p"},"RNToWebViewMessenger")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"WebViewToRNMessenger")," wrap ",(0,a.kt)("inlineCode",{parentName:"p"},".postMessage")," and ",(0,a.kt)("inlineCode",{parentName:"p"},".onmessage")," with a higher-level API, it's still possible to use the lower-level messaging API."),(0,a.kt)("h4",{id:"postmessage"},(0,a.kt)("inlineCode",{parentName:"h4"},".postMessage")),(0,a.kt)("p",null,"For compatibility with ",(0,a.kt)("inlineCode",{parentName:"p"},"react-native-webview"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"ExtendedWebView")," exposes a ",(0,a.kt)("inlineCode",{parentName:"p"},"ReactNativeWebView")," global object to content running within the ",(0,a.kt)("inlineCode",{parentName:"p"},"WebView"),"."),(0,a.kt)("p",null,"For example, the following syntax can be used to send some ",(0,a.kt)("inlineCode",{parentName:"p"},"message")," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"ExtendedWebView"),"'s ",(0,a.kt)("inlineCode",{parentName:"p"},"onMessage")," handler."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"ReactNativeWebView.postMessage(message) // Calls onMessage\n")),(0,a.kt)("h4",{id:"windowonmessage"},(0,a.kt)("inlineCode",{parentName:"h4"},"window.onmessage")),(0,a.kt)("p",null,"Message sent to the WebView using ",(0,a.kt)("inlineCode",{parentName:"p"},"webviewRef.postMessage")," are received by the global ",(0,a.kt)("inlineCode",{parentName:"p"},"onmessage")," event. For example,"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"// ...within some component\nconst webViewRef = useRef<WebViewControl>();\n\nreturn (\n    <ExtendedWebView\n        webviewInstanceId='test-webview'\n        html={'some html here'}\n        injectedJavaScript={`\n            window.addEventListener('message', event => {\n                if (event.origin === 'react-native') {\n                    const messageData = event.data;\n                    // ...use event.data...\n                }\n            });\n        `}\n        ref={webViewRef}\n        onLoadEnd={() => webViewRef.current.postMessage('test')}\n    />\n)\n")),(0,a.kt)("h2",{id:"note-viewer"},"Note viewer"),(0,a.kt)("p",null,"As on Android and iOS, the ",(0,a.kt)("inlineCode",{parentName:"p"},"NoteBodyViewer")," uses an ",(0,a.kt)("inlineCode",{parentName:"p"},"ExtendedWebView")," to render and display notes. However, because the Web App uses a virtual file system, extra processing is needed to transfer resources to the WebView."),(0,a.kt)("p",null,"For resources, this process might look like this:"),(0,a.kt)("mermaid",{value:'flowchart TD\n\tsubgraph app\n\tresources["Attached resource IDs"]\n\tloadFiles("Load from fsDriver")\n\trenderCall("Rerender")\n\n\tresources--\x3eloadFiles\n\tend\n\n\tsubgraph NoteViewer\n\ttoBlobUrl("Convert to blob URL")\n\trenderer("Renderer")\n\n\tloadFiles--"setResourceFile(id, file)"--\x3etoBlobUrl\n\tresourcePathOverrides\n\ttoBlobUrl--"store in"--\x3eresourcePathOverrides\n\n\tresourcePathOverrides--\x3erenderer\n\trenderCall--\x3erenderer\n\tend'}),(0,a.kt)("p",null,"A similar process loads plugin assets (e.g. CSS and fonts used by rendered math)."),(0,a.kt)("h2",{id:"incompatible-libraries"},"Incompatible libraries"),(0,a.kt)("p",null,"Some libraries are incompatible with ",(0,a.kt)("inlineCode",{parentName:"p"},"react-native-web"),". There are two or more ways to handle this:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Use the library only in an Android and iOS-only file. For example, if the library is used in ",(0,a.kt)("inlineCode",{parentName:"li"},"shareImage.ts"),", create ",(0,a.kt)("inlineCode",{parentName:"li"},"shareImage.web.ts")," with a web-only implementation. On web, the ",(0,a.kt)("inlineCode",{parentName:"li"},".web.ts")," extension is preferred to the ",(0,a.kt)("inlineCode",{parentName:"li"},".ts")," extension. On other platforms, this is not the case. As such, on web ",(0,a.kt)("inlineCode",{parentName:"li"},"shareImage.web.ts")," will be imported, while on other platforms ",(0,a.kt)("inlineCode",{parentName:"li"},"shareImage.ts")," will be."),(0,a.kt)("li",{parentName:"ol"},"Replace the incompatible library with an empty mock (see ",(0,a.kt)("inlineCode",{parentName:"li"},"web/webpack.config.js"),"). This can be useful if the library is ",(0,a.kt)("inlineCode",{parentName:"li"},"imported")," by a code that is known to be unreachable on web.")))}m.isMDXComponent=!0}}]);