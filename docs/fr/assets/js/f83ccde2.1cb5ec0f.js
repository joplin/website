"use strict";(self.webpackChunk_joplin_doc_builder=self.webpackChunk_joplin_doc_builder||[]).push([[1410],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),h=r,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||s;return n?o.createElement(m,a(a({ref:t},p),{},{components:n})):o.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,a[1]=i;for(var c=2;c<s;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},59966:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return c}});var o=n(87462),r=(n(67294),n(3905));const s={created:new Date("2020-09-06T17:23:25.000Z"),source_url:"https://www.patreon.com/posts/improving-sync-41310131",sidebar_label:"Improving the sync process in Joplin",date:new Date("2020-09-06T00:00:00.000Z"),title:"Improving the sync process in Joplin",description:"The latest version of Joplin includes a mechanism to upgrade the structure of a sync target. When you startup the app you will be asked to upgrade before being able to sync. Once you start the proc..."},a="Improving the sync process in Joplin",i={permalink:"/fr/news/20200906-172325",editUrl:"https://github.com/laurent22/joplin/tree/dev/readme/news/20200906-172325.md",source:"@site/news/20200906-172325.md",title:"Improving the sync process in Joplin",description:"The latest version of Joplin includes a mechanism to upgrade the structure of a sync target. When you startup the app you will be asked to upgrade before being able to sync. Once you start the proc...",date:"2020-09-06T00:00:00.000Z",formattedDate:"6 septembre 2020",tags:[],readingTime:5.155,hasTruncateMarker:!1,authors:[],frontMatter:{created:"2020-09-06T17:23:25.000Z",source_url:"https://www.patreon.com/posts/improving-sync-41310131",sidebar_label:"Improving the sync process in Joplin",date:"2020-09-06T00:00:00.000Z",title:"Improving the sync process in Joplin",description:"The latest version of Joplin includes a mechanism to upgrade the structure of a sync target. When you startup the app you will be asked to upgrade before being able to sync. Once you start the proc..."},prevItem:{title:"Version 1.1: Search engine update",permalink:"/fr/news/20200913-163730"},nextItem:{title:"New config screen design is ready!",permalink:"/fr/news/20200708-192444"}},l={authorsImageUrls:[]},c=[{value:"No upper limit on the number of items",id:"no-upper-limit-on-the-number-of-items",level:3},{value:"Not possible to prioritise downloads",id:"not-possible-to-prioritise-downloads",level:3},{value:"End-to-end encryption is hard to setup",id:"end-to-end-encryption-is-hard-to-setup",level:3},{value:"Old notes that never change should be handled differently",id:"old-notes-that-never-change-should-be-handled-differently",level:3},{value:"The resource directory should be renamed",id:"the-resource-directory-should-be-renamed",level:3},{value:"Conclusion",id:"conclusion",level:3}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"donate-links"},(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.paypal.com/donate/?business=E8JMYD2LQ8MMA&no_recurring=0&item_name=I+rely+on+donations+to+maintain+and+improve+the+Joplin+open+source+project.+Thank+you+for+your+help+-+it+makes+a+difference%21&currency_code=EUR"},(0,r.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-PayPal-green.svg",alt:"Donate using PayPal"}))," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sponsors/laurent22/"},(0,r.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/GitHub-Badge.svg",alt:"Sponsor on GitHub"}))," ",(0,r.kt)("a",{parentName:"p",href:"https://www.patreon.com/joplin"},(0,r.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Patreon-Badge.svg",alt:"Become a patron"}))," ",(0,r.kt)("a",{parentName:"p",href:"https://joplinapp.org/donate/#donations"},(0,r.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-IBAN.svg",alt:"Donate using IBAN"})))),(0,r.kt)("p",null,"The latest version of Joplin includes a mechanism to upgrade the structure of a sync target. When you startup the app you will be asked to upgrade before being able to sync. Once you start the process, the app will briefly display an information screen, upgrade the sync target, and then restart the app. You\u2019ll then be able to sync with the new sync target format. That first upgrade is quite simple as the goal for now is to put the mechanism in place and verify that it works well."),(0,r.kt)("p",null,"From a user perspective this feature doesn\u2019t do anything visible, although ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/laurent22/joplin/issues/3692#issuecomment-685679213"},"it caused some issues"),", so one might wonder why it\u2019s even there. This post is meant to clarify this."),(0,r.kt)("p",null,"The structure of the sync target hasn\u2019t really changed since the day Joplin was released. It works well however it has some shortcomings that should be fixed eventually for sync to remain performant."),(0,r.kt)("p",null,"There are also various improvements that could be made but were not previously possible due to the lack of an upgrade mechanism. I have listed below the 5 main limitations or issues with the current sync process and how they could be fixed:"),(0,r.kt)("h3",{id:"no-upper-limit-on-the-number-of-items"},"No upper limit on the number of items"),(0,r.kt)("p",null,"Joplin\u2019s UI works well even with millions of notes, however the sync target will keep getting slower and slower as more files are added to it. File systems often have a limit to the number of files they can support in a directory. One user also has reached ",(0,r.kt)("a",{parentName:"p",href:"https://discourse.joplinapp.org/t/limit-on-the-number-of-child-items-was-reached/3804"},"the limit of 150,000 items on OneDrive"),"."),(0,r.kt)("p",null,"For now, this is not a big issue because most users don\u2019t have millions of items, but as more web pages are being clipped (clipped pages often contain many small resources and images) and more note revisions are created (one note can have hundreds of revisions), this issue might start affecting more users."),(0,r.kt)("p",null,"One way to solve this issue would be to split the sync items into multiple directories. For example if we split the main directory into 100 sub-directories, it will be possible to have 15,000,000 OneDrive items instead of 150,000. Another way would be to support note archiving, as described below. How exactly we\u2019ll handle this problem is still to be defined, but there are certainly ways."),(0,r.kt)("h3",{id:"not-possible-to-prioritise-downloads"},"Not possible to prioritise downloads"),(0,r.kt)("p",null,"Currently, when syncing, the items are downloaded in a random way. So it might download some notes, then some tags and notebooks, then back to downloading notes, etc. For small sync operations it doesn\u2019t matter, but large ones, like when setting up a new device, it is very inefficient. For example, the app might download hundreds of note revisions or tags, but won\u2019t display anything for a while because it won\u2019t have downloaded notebooks or notes."),(0,r.kt)("p",null,"A simple improvement would be to group the items by type on the sync target. So all notebook items together, all tags together, etc. Doing so means when syncing we can first download the notebooks, then the notes, which means something will be displayed almost immediately in the app, allowing the user to start using it. Then later less important items like tags or note revisions will be downloaded."),(0,r.kt)("h3",{id:"end-to-end-encryption-is-hard-to-setup"},"End-to-end encryption is hard to setup"),(0,r.kt)("p",null,"Currently, the encryption settings is a property of the clients. What it means it that when you setup a new client, it doesn\u2019t know whether the other clients use encryption or not. It\u2019s going to guess more or less based on the data on the sync target. You can also force it to use encryption but this has drawbacks and often mean a new master key is going to be created, even though there might already be one on the sync target."),(0,r.kt)("p",null,"E2EE works well once it\u2019s setup, but doing so can be tricky and possibly confusing - if you didn\u2019t follow ",(0,r.kt)("a",{parentName:"p",href:"https://joplinapp.org/help/apps/sync/e2ee"},"this guide")," to the letter, you might end up with multiple master keys, or sending decrypted notes to an encrypted target."),(0,r.kt)("p",null,"A way to solve this would be to make the E2EE settings a property of the sync target. Concretely there would be a file that tells if E2EE is enabled or not, and maybe some way to quickly get the master key. It would simplify setting up encryption a lot and make it more secure (because you won\u2019t be able to send non-encrypted notes to an encrypted sync target). When you setup a new client, the client will know immediately if it\u2019s an encrypted target or not and set the client accordingly."),(0,r.kt)("h3",{id:"old-notes-that-never-change-should-be-handled-differently"},"Old notes that never change should be handled differently"),(0,r.kt)("p",null,"It would be more efficient to treat old notes differently by allowing the user to \u201carchive\u201d them. An archived note would be read-only. Then one idea could be to group all these archived notes into a ZIP file on the sync target. Doing so means that the initial sync would be much faster (instead of downloading hundred of small files, which is slow, it will download one large file, which is fast). It would also make the structure more scalable - you could keep several years of archived notes on the sync target while keeping sync fast and efficient."),(0,r.kt)("h3",{id:"the-resource-directory-should-be-renamed"},"The resource directory should be renamed"),(0,r.kt)("p",null,"The folder that contains file attachments is named \u201c.resources\u201d on the sync target. This causes troubles because certain platforms will hide directories that start with dot \u201c.\u201d, and perhaps they will be excluded from backup or skipped when moved somewhere else. Being able to upgrade the sync target means we can rename this folder to just \u201cresources\u201d instead."),(0,r.kt)("h3",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"That\u2019s obviously a lot of possible improvements and it won\u2019t be done overnight, but having the sync upgrade mechanism in place means we can start considering these options. Some of these, such as renaming the \u201cresources\u201d dir are simpler and could be done relatively soon. Perhaps other more complex ones will be group within one sync target upgrade to minimise disruption. In any case, I hope this clarifies the reason for this recent sync upgrade and that it gives some ideas of what to expect in the future."))}d.isMDXComponent=!0}}]);