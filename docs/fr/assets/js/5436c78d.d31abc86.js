"use strict";(self.webpackChunk_joplin_doc_builder=self.webpackChunk_joplin_doc_builder||[]).push([[5180],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),f=r,h=u["".concat(l,".").concat(f)]||u[f]||m[f]||a;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2418:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return p}});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_label:"Plugin theming",title:"Plugin theming",description:"CSS Plugins add custom content to the UI using webview panels. The HTML content of a a panel is styled with CSS. To keep the look and feel of a plugin consistent with the rest of the Joplin UI, you..."},i="Plugin theming",s={unversionedId:"api/references/plugin_theming",id:"api/references/plugin_theming",title:"Plugin theming",description:"CSS Plugins add custom content to the UI using webview panels. The HTML content of a a panel is styled with CSS. To keep the look and feel of a plugin consistent with the rest of the Joplin UI, you...",source:"@site/help/api/references/plugin_theming.md",sourceDirName:"api/references",slug:"/api/references/plugin_theming",permalink:"/fr/help/api/references/plugin_theming",draft:!1,editUrl:"https://github.com/laurent22/joplin/tree/dev/readme/api/references/plugin_theming.md",tags:[],version:"current",frontMatter:{sidebar_label:"Plugin theming",title:"Plugin theming",description:"CSS Plugins add custom content to the UI using webview panels. The HTML content of a a panel is styled with CSS. To keep the look and feel of a plugin consistent with the rest of the Joplin UI, you..."},sidebar:"helpSidebar",previous:{title:"Plugin Manifest",permalink:"/fr/help/api/references/plugin_manifest"},next:{title:"Contributing to Joplin",permalink:"/fr/help/dev/"}},l={},p=[{value:"CSS",id:"css",level:2},{value:"Icons",id:"icons",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"plugin-theming"},"Plugin theming"),(0,r.kt)("div",{className:"donate-links"},(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.paypal.com/donate/?business=E8JMYD2LQ8MMA&no_recurring=0&item_name=I+rely+on+donations+to+maintain+and+improve+the+Joplin+open+source+project.+Thank+you+for+your+help+-+it+makes+a+difference%21&currency_code=EUR"},(0,r.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-PayPal-green.svg",alt:"Donate using PayPal"}))," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sponsors/laurent22/"},(0,r.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/GitHub-Badge.svg",alt:"Sponsor on GitHub"}))," ",(0,r.kt)("a",{parentName:"p",href:"https://www.patreon.com/joplin"},(0,r.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Patreon-Badge.svg",alt:"Become a patron"}))," ",(0,r.kt)("a",{parentName:"p",href:"https://joplinapp.org/donate/#donations"},(0,r.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/laurent22/joplin/dev/Assets/WebsiteAssets/images/badges/Donate-IBAN.svg",alt:"Donate using IBAN"})))),(0,r.kt)("h2",{id:"css"},"CSS"),(0,r.kt)("p",null,"Plugins add custom content to the UI using ",(0,r.kt)("a",{parentName:"p",href:"https://joplinapp.org/api/references/plugin_api/classes/joplinviewspanels.html"},"webview panels"),". The HTML content of a a panel is styled with CSS."),(0,r.kt)("p",null,"To keep the look and feel of a plugin consistent with the rest of the Joplin UI, you are automatically provided with variables derived from the current theme."),(0,r.kt)("p",null,"Variables follow the naming convention ",(0,r.kt)("inlineCode",{parentName:"p"},"--joplin-{property}")," and are used in your plugin's stylesheet as shown here."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"/* webview.css */\n.container {\n    color: var(--joplin-color);\n    font-family: var(--joplin-font-family);\n}\n")),(0,r.kt)("h2",{id:"icons"},"Icons"),(0,r.kt)("p",null,"In addition to variables, you have access to a set of standard font assets that ship with Joplin. These include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://fonts.google.com/specimen/Roboto?preview.text_type=custom"},"Roboto")," - (the standard UI font, ",(0,r.kt)("inlineCode",{parentName:"li"},"font-family")," referenced above)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://fontawesome.com/icons?d=gallery&p=2&m=free"},"Font Awesome")," - icon library"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://icomoon.io/#preview-free"},"icoMoon")," - icon library (subset, see ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/laurent22/joplin/blob/dev/packages/app-desktop/style/icons/style.css"},"style.css"),")")),(0,r.kt)("p",null,"To display an icon, use CSS and HTML like the following."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"/* style icons to match the theme */\n.toolbarIcon {\n    font-size: var(--joplin-toolbar-icon-size);\n}\n.primary {\n    color: var(--joplin-color);\n}\n.secondary {\n    color: var(--joplin-color2);\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<i class="toolbarIcon primary fas fa-music"></i> Font Awesome music icon\n<br />\n<i class="toolbarIcon secondary icon-notebooks"></i> icoMoon notebook icon\n')))}m.isMDXComponent=!0}}]);